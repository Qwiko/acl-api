"""empty message

Revision ID: 79ea45a118b7
Revises: c825fa8e8ee7
Create Date: 2025-08-15 08:59:31.706339

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "79ea45a118b7"
down_revision: Union[str, None] = "c825fa8e8ee7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, "deployer_configs", ["id"])
    op.create_unique_constraint(None, "deployers", ["id"])
    op.create_unique_constraint(None, "deployments", ["id"])
    op.create_foreign_key(None, "deployments", "deployers", ["deployer_id"], ["id"])
    op.create_unique_constraint(None, "dynamic_policies", ["id"])
    op.create_index(op.f("ix_network_addresses_network_id"), "network_addresses", ["network_id"], unique=False)
    op.create_unique_constraint("uq_network_address_nested", "network_addresses", ["network_id", "nested_network_id"])
    op.create_unique_constraint(None, "network_addresses", ["id"])
    op.create_unique_constraint("uq_network_name", "networks", ["id", "name"])
    op.create_unique_constraint(None, "networks", ["id"])
    op.create_unique_constraint(None, "policies", ["id"])
    op.drop_index("ix_policy_terms_lex_order", table_name="policy_terms")
    op.drop_constraint("uq_policy_lex_order", "policy_terms", type_="unique")
    op.drop_constraint("uq_policy_name", "policy_terms", type_="unique")
    op.create_unique_constraint("uq_policy_term_name", "policy_terms", ["policy_id", "name"])
    op.create_unique_constraint("uq_policy_term_nested", "policy_terms", ["policy_id", "nested_policy_id"])
    op.create_unique_constraint(None, "policy_terms", ["id"])
    op.drop_column("policy_terms", "lex_order")
    op.create_unique_constraint(None, "revision_configs", ["id"])
    op.create_unique_constraint(None, "revisions", ["id"])
    op.create_index(op.f("ix_service_entries_service_id"), "service_entries", ["service_id"], unique=False)
    op.create_unique_constraint("uq_service_entry_nested", "service_entries", ["service_id", "nested_service_id"])
    op.create_unique_constraint(None, "service_entries", ["id"])
    op.create_unique_constraint("uq_service_name", "services", ["id", "name"])
    op.create_unique_constraint(None, "services", ["id"])
    op.create_unique_constraint(None, "target_replacements", ["id"])
    op.create_unique_constraint(None, "targets", ["id"])
    op.create_unique_constraint(None, "test_cases", ["id"])
    op.create_unique_constraint(None, "tests", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "tests", type_="unique")
    op.drop_constraint(None, "test_cases", type_="unique")
    op.drop_constraint(None, "targets", type_="unique")
    op.drop_constraint(None, "target_replacements", type_="unique")
    op.drop_constraint(None, "services", type_="unique")
    op.drop_constraint("uq_service_name", "services", type_="unique")
    op.drop_constraint(None, "service_entries", type_="unique")
    op.drop_constraint("uq_service_entry_nested", "service_entries", type_="unique")
    op.drop_index(op.f("ix_service_entries_service_id"), table_name="service_entries")
    op.drop_constraint(None, "revisions", type_="unique")
    op.drop_constraint(None, "revision_configs", type_="unique")
    op.add_column("policy_terms", sa.Column("lex_order", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, "policy_terms", type_="unique")
    op.drop_constraint("uq_policy_term_nested", "policy_terms", type_="unique")
    op.drop_constraint("uq_policy_term_name", "policy_terms", type_="unique")
    op.create_unique_constraint("uq_policy_name", "policy_terms", ["policy_id", "name"])
    op.create_unique_constraint("uq_policy_lex_order", "policy_terms", ["policy_id", "lex_order"])
    op.create_index("ix_policy_terms_lex_order", "policy_terms", ["lex_order"], unique=False)
    op.drop_constraint(None, "policies", type_="unique")
    op.drop_constraint("uq_policy_name", "policies", type_="unique")
    op.drop_constraint(None, "networks", type_="unique")
    op.drop_constraint("uq_network_name", "networks", type_="unique")
    op.drop_constraint(None, "network_addresses", type_="unique")
    op.drop_constraint("uq_network_address_nested", "network_addresses", type_="unique")
    op.drop_index(op.f("ix_network_addresses_network_id"), table_name="network_addresses")
    op.drop_constraint(None, "dynamic_policies", type_="unique")
    op.drop_constraint(None, "deployments", type_="foreignkey")
    op.drop_constraint(None, "deployments", type_="unique")
    op.drop_constraint(None, "deployers", type_="unique")
    op.drop_constraint(None, "deployer_configs", type_="unique")
    # ### end Alembic commands ###
